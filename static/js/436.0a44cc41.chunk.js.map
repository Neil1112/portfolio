{"version":3,"file":"static/js/436.0a44cc41.chunk.js","mappings":"gKAAO,IAAMA,EAAe,wzF","sources":["notes-strings/build-basic-gans-C1W1.js"],"sourcesContent":["export const markdownContent = `\n# Week 1 notes compiled\n\n---\n\n# Generative Models\n\n## Generative vs Discriminative Models\n\n**Discriminative Models -**\n\n- Classifiers - Dog or Cat\n- $x \\rightarrow y$\n    - $x: features$,\n    - $y: class$\n- They give $P(y|x)$\n\n**Generative Models -**\n\n- They learn how to make a realistic representation of some class.\n    - e.g. - Image of a dog\n- They take some random noise input $\\{xi}$ and sometimes a class $y$ and generates a set of features $x$.\n- $\\{xi}, y \\rightarrow x$\n    - $\\{xi}: noise$,\n    - $x: features$,\n    - $y: class$\n- They give $P(x|y)$\n    - $y$ can be omitted if there is only 1 class.\n\nThere are many types of Generative models - \n\n## Variational Autoencoders (VAEs)\n\n- Encoder’s job is to transform the image as a vector in the latent space.\n- Then we sample a nearby vector to this vector and put it through the Decoder to reconstruct the realistic image that the encoder saw before.\n- After training, we only use the Decoder. We take a random sample and construct the image through the Decoder.\n- The VAE injects some noise as well.\n    - So instead of putting the point in latent space, the encoder actually encodes the image onto a whole distribution and then samples a point on that distribution to feed into the decoder.\n\n## Generative Adversarial Networks (GANs)\n\n- They work a bit different from VAEs.\n- Generator generates the images like the decoder by taking in some noise.\n    - It can also take optionally a class (if there is only 1 class, then we can omit inputting it).\n- The Discriminator looks at the fake and real images simultaneously and figure out which are real and fakes.\n- These models competes against each other. Hence the name “Adversarial”.\n- After training, we won’t need the Discriminator Model anymore.\n\n## Summary\n\n- Generative Models learn to produce realistic examples.\n- Discriminative models distinguish between classes (or real / fakes).\n\n---\n\n# Intuition Behind GANs\n\n- GANs have 2 components :\n    - Generator\n    - Discriminator\n- These are typically Neural Networks.\n- Generator learns to make fakes that looks real.\n- Discriminator learns to distinguish real from fake.\n- The learn from the competition with each other.\n- At the end, fakes look real.\n\n---\n\n# Discriminator\n\n- Type of classifier.\n- The Goal of the discriminator is to model the probability of each class given a set of input features.\n    - $P(cat|image)$\n    - i.e.- $P(y|x)$\n- The Discriminator takes in the “fake” image and classify how fake it is.\n    - e.g.- $P(fake|image) = 0.85$\n- i.e.-  for Discriminator : $P(fake|image)$\n\n## Summary\n\n- The Discriminator is a classifier.\n- It learns the probability of class $y$ (real or fake) given features $x$.\n- The probabilities are the feedback for the Generator.\n\n---\n`"],"names":["markdownContent"],"sourceRoot":""}